{
  "timestamp": "2025-10-08T19:12:46.473Z",
  "summary": {
    "passed": 32,
    "failed": 0,
    "warnings": 4,
    "successRate": 100
  },
  "tests": [
    {
      "name": "Ask Expert Page Exists",
      "status": "PASS",
      "message": "src/app/(app)/ask-expert/page.tsx"
    },
    {
      "name": "Page has proper imports",
      "status": "PASS",
      "message": "React hooks imported"
    },
    {
      "name": "Page has agent selection",
      "status": "PASS",
      "message": "Agent selection functionality"
    },
    {
      "name": "Page has streaming support",
      "status": "PASS",
      "message": "Streaming functionality"
    },
    {
      "name": "Page calls correct API",
      "status": "PASS",
      "message": "Calls dedicated Ask Expert API"
    },
    {
      "name": "Ask Expert API Route Exists",
      "status": "PASS",
      "message": "src/app/api/ask-expert/route.ts"
    },
    {
      "name": "API has POST handler",
      "status": "PASS",
      "message": "POST endpoint implemented"
    },
    {
      "name": "API has GET handler",
      "status": "PASS",
      "message": "GET endpoint for sessions"
    },
    {
      "name": "API uses streamAskExpertWorkflow",
      "status": "PASS",
      "message": "Uses LangGraph workflow"
    },
    {
      "name": "API has streaming support",
      "status": "PASS",
      "message": "Streaming implementation"
    },
    {
      "name": "API has error handling",
      "status": "PASS",
      "message": "Error handling implemented"
    },
    {
      "name": "Ask Expert routes to /ask-expert",
      "status": "PASS",
      "message": "Correct routing to dedicated page"
    },
    {
      "name": "Advanced Memory Service Exists",
      "status": "PASS",
      "message": "src/features/chat/memory/advanced-memory.ts"
    },
    {
      "name": "Memory service is not mocked",
      "status": "PASS",
      "message": "Real implementation, not mock"
    },
    {
      "name": "Memory has Supabase integration",
      "status": "PASS",
      "message": "Database integration"
    },
    {
      "name": "Memory has multiple strategies",
      "status": "PASS",
      "message": "Multiple memory strategies"
    },
    {
      "name": "Long Term Memory Service Exists",
      "status": "PASS",
      "message": "src/features/chat/memory/long-term-memory.ts"
    },
    {
      "name": "Long term memory is not mocked",
      "status": "PASS",
      "message": "Real implementation, not mock"
    },
    {
      "name": "Long term memory has fact extraction",
      "status": "PASS",
      "message": "Fact extraction capability"
    },
    {
      "name": "Long term memory has enhanced context",
      "status": "PASS",
      "message": "Enhanced context retrieval"
    },
    {
      "name": "Ask Expert Graph Exists",
      "status": "PASS",
      "message": "src/features/chat/services/ask-expert-graph.ts"
    },
    {
      "name": "Graph has LangGraph imports",
      "status": "PASS",
      "message": "LangGraph integration"
    },
    {
      "name": "Graph has workflow functions",
      "status": "PASS",
      "message": "Streaming workflow function"
    },
    {
      "name": "Graph has budget checking",
      "status": "PASS",
      "message": "Budget checking functionality"
    },
    {
      "name": "Graph has context retrieval",
      "status": "PASS",
      "message": "Context retrieval functionality"
    },
    {
      "name": "Memory tables migration exists",
      "status": "PASS",
      "message": "database/sql/migrations/2025/20250105000000_ask_expert_memory_tables.sql"
    },
    {
      "name": "Migration creates chat_memory table",
      "status": "PASS",
      "message": "Chat memory table creation"
    },
    {
      "name": "Migration creates user_facts table",
      "status": "PASS",
      "message": "User facts table creation"
    },
    {
      "name": "Migration creates indexes",
      "status": "PASS",
      "message": "Performance indexes"
    },
    {
      "name": "Supabase URL configured",
      "status": "PASS",
      "message": "Supabase URL environment variable"
    },
    {
      "name": "Supabase service key configured",
      "status": "PASS",
      "message": "Supabase service role key"
    },
    {
      "name": "OpenAI API key configured",
      "status": "PASS",
      "message": "OpenAI API key for LLM"
    },
    {
      "name": "Conflicting route: src/app/api/chat/route.ts",
      "status": "WARN",
      "message": "Multiple chat API routes exist - may cause confusion"
    },
    {
      "name": "Conflicting route: src/app/api/chat/enhanced/route.ts",
      "status": "WARN",
      "message": "Multiple chat API routes exist - may cause confusion"
    },
    {
      "name": "Conflicting route: src/app/api/chat/langchain-enhanced/route.ts",
      "status": "WARN",
      "message": "Multiple chat API routes exist - may cause confusion"
    },
    {
      "name": "Conflicting route: src/app/api/chat/autonomous/route.ts",
      "status": "WARN",
      "message": "Multiple chat API routes exist - may cause confusion"
    }
  ]
}