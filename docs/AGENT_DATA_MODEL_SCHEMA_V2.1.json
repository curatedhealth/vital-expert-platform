{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "AI Agent Complete Data Model",
  "description": "Comprehensive schema for AI agents with ALL database fields for import/export",
  "version": "2.1",
  "type": "object",
  "required": ["name", "display_name", "tier", "status"],
  "properties": {
    "id": {
      "type": "string",
      "format": "uuid",
      "description": "Unique agent identifier (auto-generated if not provided)"
    },

    "_comment_core_identity": "=== CORE IDENTITY FIELDS ===",

    "name": {
      "type": "string",
      "description": "Machine-readable name (lowercase, hyphenated)",
      "pattern": "^[a-z0-9-_]+$",
      "examples": ["clinical-trial-designer", "patient_education_assistant"]
    },
    "display_name": {
      "type": "string",
      "description": "Human-readable display name",
      "examples": ["Clinical Trial Designer", "Patient Education Assistant"]
    },
    "description": {
      "type": "string",
      "description": "Brief description of the agent (1-2 sentences)",
      "maxLength": 500
    },
    "tier": {
      "type": "integer",
      "enum": [1, 2, 3],
      "description": "Agent complexity tier: 1 (Foundational), 2 (Specialist), 3 (Expert)"
    },
    "status": {
      "type": "string",
      "enum": ["active", "beta", "deprecated", "draft"],
      "description": "Current deployment status"
    },
    "priority": {
      "type": "integer",
      "minimum": 1,
      "maximum": 10,
      "description": "Priority level (1-10, higher = more critical)"
    },

    "_comment_visual_branding": "=== VISUAL & BRANDING ===",

    "avatar": {
      "type": "string",
      "description": "Avatar icon URL or path",
      "examples": [
        "https://xazinxsiglqokwfmogyk.supabase.co/storage/v1/object/public/avatars/avatar_0001.png",
        "medical-doctor.svg"
      ]
    },
    "color": {
      "type": "string",
      "description": "Brand color (hex code)",
      "pattern": "^#[0-9A-Fa-f]{6}$",
      "examples": ["#3F51B5", "#FF5722"]
    },
    "version": {
      "type": "string",
      "description": "Agent version (semantic versioning)",
      "pattern": "^\\d+\\.\\d+\\.\\d+$",
      "default": "1.0.0"
    },

    "_comment_model_config": "=== MODEL CONFIGURATION ===",

    "model": {
      "type": "string",
      "description": "Primary LLM model to use",
      "enum": [
        "gpt-4",
        "gpt-4-turbo",
        "gpt-4-turbo-preview",
        "gpt-4o",
        "gpt-4o-mini",
        "claude-3-opus",
        "claude-3-sonnet",
        "claude-3-haiku",
        "claude-3.5-sonnet"
      ],
      "default": "gpt-4-turbo-preview"
    },
    "system_prompt": {
      "type": "string",
      "description": "Complete system prompt (can be generated via template or provided)",
      "minLength": 100
    },
    "temperature": {
      "type": "number",
      "minimum": 0,
      "maximum": 2,
      "description": "Model temperature (0.0 = deterministic, 2.0 = creative)",
      "default": 0.6
    },
    "max_tokens": {
      "type": "integer",
      "minimum": 100,
      "maximum": 128000,
      "description": "Maximum tokens in response",
      "default": 4000
    },
    "context_window": {
      "type": "integer",
      "description": "Context window size in tokens",
      "default": 16000
    },
    "response_format": {
      "type": "string",
      "enum": ["text", "markdown", "json", "html"],
      "description": "Default response format",
      "default": "markdown"
    },

    "_comment_knowledge_rag": "=== KNOWLEDGE & RAG ===",

    "rag_enabled": {
      "type": "boolean",
      "description": "Enable RAG (Retrieval Augmented Generation)",
      "default": true
    },
    "capabilities": {
      "type": "array",
      "description": "List of agent capabilities (minimum 5 for production)",
      "items": {
        "type": "string"
      },
      "minItems": 4,
      "examples": [
        [
          "Clinical trial protocol design",
          "FDA regulatory compliance",
          "Statistical analysis planning",
          "Endpoint selection",
          "Sample size calculation"
        ]
      ]
    },
    "knowledge_domains": {
      "type": "array",
      "description": "Knowledge domains the agent has access to",
      "items": {
        "type": "string"
      },
      "examples": [
        ["FDA Guidance Documents", "ICH-GCP Guidelines", "Statistical Methods"]
      ]
    },
    "domain_expertise": {
      "type": "string",
      "enum": ["general", "specialist", "expert"],
      "description": "Overall domain expertise level",
      "default": "general"
    },
    "competency_levels": {
      "type": "object",
      "description": "Detailed competency levels by domain",
      "additionalProperties": {
        "type": "string",
        "enum": ["novice", "competent", "proficient", "expert", "master"]
      }
    },
    "knowledge_sources": {
      "type": "object",
      "description": "Knowledge sources configuration",
      "properties": {
        "databases": {
          "type": "array",
          "items": { "type": "string" }
        },
        "documents": {
          "type": "array",
          "items": { "type": "string" }
        },
        "apis": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },

    "_comment_tools": "=== TOOLS & INTEGRATIONS ===",

    "tools": {
      "type": "array",
      "description": "Tools available to the agent",
      "items": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Tool unique identifier"
          },
          "name": {
            "type": "string",
            "description": "Tool name"
          },
          "description": {
            "type": "string",
            "description": "What the tool does"
          },
          "type": {
            "type": "string",
            "enum": ["retrieval", "action", "computation", "integration"],
            "description": "Tool category"
          }
        }
      }
    },
    "tool_configurations": {
      "type": "object",
      "description": "Tool-specific configurations",
      "additionalProperties": true
    },

    "_comment_organizational": "=== ORGANIZATIONAL STRUCTURE ===",

    "business_function": {
      "type": "string",
      "description": "Organizational business function",
      "examples": ["Clinical Development", "Regulatory Affairs", "Commercial"]
    },
    "business_function_id": {
      "type": "string",
      "format": "uuid",
      "description": "Business function UUID (FK)"
    },
    "department": {
      "type": "string",
      "description": "Department within business function",
      "examples": ["Clinical Operations", "Medical Affairs", "Compliance"]
    },
    "department_id": {
      "type": "string",
      "format": "uuid",
      "description": "Department UUID (FK)"
    },
    "role": {
      "type": "string",
      "description": "Specific role within department",
      "examples": ["Protocol Designer", "Medical Writer", "Regulatory Strategist"]
    },
    "role_id": {
      "type": "string",
      "format": "uuid",
      "description": "Role UUID (FK)"
    },
    "agent_role": {
      "type": "string",
      "description": "Agent role level",
      "examples": ["Senior Specialist", "Expert", "Consultant"]
    },
    "agent_role_id": {
      "type": "string",
      "format": "uuid",
      "description": "Agent role UUID (FK)"
    },

    "_comment_compliance_security": "=== COMPLIANCE & SECURITY ===",

    "evidence_required": {
      "type": "boolean",
      "description": "Whether agent requires evidence-based responses",
      "default": false
    },
    "regulatory_context": {
      "type": "object",
      "description": "Regulatory context and requirements",
      "properties": {
        "is_regulated": {
          "type": "boolean",
          "default": false
        },
        "regulations": {
          "type": "array",
          "items": { "type": "string" }
        }
      }
    },
    "compliance_tags": {
      "type": "array",
      "description": "Compliance tags",
      "items": {
        "type": "string"
      }
    },
    "hipaa_compliant": {
      "type": "boolean",
      "description": "Whether agent is HIPAA compliant",
      "default": false
    },
    "gdpr_compliant": {
      "type": "boolean",
      "description": "Whether agent is GDPR compliant",
      "default": false
    },
    "audit_trail_enabled": {
      "type": "boolean",
      "description": "Whether audit trail logging is enabled",
      "default": true
    },
    "data_classification": {
      "type": "string",
      "enum": ["public", "internal", "confidential", "restricted"],
      "description": "Data classification level",
      "default": "internal"
    },

    "_comment_medical_domain": "=== DOMAIN-SPECIFIC: MEDICAL ===",

    "medical_specialty": {
      "type": "string",
      "description": "Medical specialty if applicable",
      "examples": ["Oncology", "Cardiology", "Neurology", "General Medicine"]
    },
    "pharma_enabled": {
      "type": "boolean",
      "description": "Whether pharmaceutical protocols are enabled",
      "default": false
    },
    "verify_enabled": {
      "type": "boolean",
      "description": "Whether VERIFY protocol is enabled",
      "default": false
    },

    "_comment_legal_domain": "=== DOMAIN-SPECIFIC: LEGAL ===",

    "jurisdiction_coverage": {
      "type": "array",
      "description": "Legal jurisdictions covered",
      "items": {
        "type": "string"
      },
      "examples": [["US", "EU", "UK"]]
    },
    "legal_domains": {
      "type": "array",
      "description": "Legal practice areas",
      "items": {
        "type": "string"
      },
      "examples": [["Regulatory", "IP", "Corporate"]]
    },
    "bar_admissions": {
      "type": "array",
      "description": "Bar admissions",
      "items": {
        "type": "string"
      }
    },
    "legal_specialties": {
      "type": "array",
      "description": "Legal specialties",
      "items": {
        "type": "string"
      }
    },

    "_comment_commercial_domain": "=== DOMAIN-SPECIFIC: COMMERCIAL ===",

    "market_segments": {
      "type": "array",
      "description": "Market segments served",
      "items": {
        "type": "string"
      }
    },
    "customer_segments": {
      "type": "array",
      "description": "Customer segments targeted",
      "items": {
        "type": "string"
      }
    },
    "sales_methodology": {
      "type": "string",
      "description": "Sales methodology used",
      "examples": ["Consultative", "Solution Selling", "SPIN"]
    },
    "geographic_focus": {
      "type": "array",
      "description": "Geographic focus areas",
      "items": {
        "type": "string"
      }
    },

    "_comment_reimbursement_domain": "=== DOMAIN-SPECIFIC: REIMBURSEMENT ===",

    "payer_types": {
      "type": "array",
      "description": "Payer types covered",
      "items": {
        "type": "string"
      },
      "examples": [["Commercial", "Medicare", "Medicaid"]]
    },
    "reimbursement_models": {
      "type": "array",
      "description": "Reimbursement models supported",
      "items": {
        "type": "string"
      }
    },
    "coverage_determination_types": {
      "type": "array",
      "description": "Coverage determination types",
      "items": {
        "type": "string"
      }
    },
    "hta_experience": {
      "type": "boolean",
      "description": "Health Technology Assessment experience",
      "default": false
    },

    "_comment_lifecycle": "=== LIFECYCLE & VALIDATION ===",

    "implementation_phase": {
      "type": "string",
      "enum": ["planning", "development", "testing", "deployed", "retired"],
      "description": "Implementation phase"
    },
    "is_custom": {
      "type": "boolean",
      "description": "Whether agent is custom-built",
      "default": false
    },
    "is_library_agent": {
      "type": "boolean",
      "description": "Whether agent is from library",
      "default": true
    },
    "validation_status": {
      "type": "string",
      "enum": ["pending", "validated", "rejected", "expired"],
      "description": "Current validation status",
      "default": "pending"
    },
    "validation_metadata": {
      "type": "object",
      "description": "Validation metadata",
      "additionalProperties": true
    },
    "validation_history": {
      "type": "array",
      "description": "Validation history log",
      "items": {
        "type": "object",
        "properties": {
          "date": { "type": "string", "format": "date-time" },
          "validator": { "type": "string" },
          "status": { "type": "string" },
          "notes": { "type": "string" }
        }
      }
    },
    "reviewer_id": {
      "type": "string",
      "format": "uuid",
      "description": "Reviewer user ID"
    },
    "last_validation_date": {
      "type": "string",
      "format": "date-time",
      "description": "Last validation date"
    },
    "validation_expiry_date": {
      "type": "string",
      "format": "date-time",
      "description": "Validation expiry date"
    },

    "_comment_performance": "=== PERFORMANCE & MONITORING ===",

    "performance_metrics": {
      "type": "object",
      "description": "Real-time performance metrics",
      "additionalProperties": true
    },
    "performance_benchmarks": {
      "type": "object",
      "description": "Performance benchmarks",
      "additionalProperties": true
    },
    "accuracy_score": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Current accuracy score (0.0-1.0)"
    },
    "error_rate": {
      "type": "number",
      "minimum": 0,
      "maximum": 1,
      "description": "Current error rate (0.0-1.0)"
    },
    "average_response_time": {
      "type": "number",
      "minimum": 0,
      "description": "Average response time in milliseconds"
    },
    "total_interactions": {
      "type": "integer",
      "minimum": 0,
      "description": "Total number of interactions",
      "default": 0
    },
    "last_interaction": {
      "type": "string",
      "format": "date-time",
      "description": "Last interaction timestamp"
    },
    "last_health_check": {
      "type": "string",
      "format": "date-time",
      "description": "Last health check timestamp"
    },
    "availability_status": {
      "type": "string",
      "enum": ["available", "busy", "offline", "maintenance"],
      "description": "Current availability status",
      "default": "available"
    },

    "_comment_cost_business": "=== COST & BUSINESS ===",

    "cost_per_query": {
      "type": "number",
      "minimum": 0,
      "description": "Estimated cost per query in USD"
    },
    "target_users": {
      "type": "array",
      "description": "Target user groups",
      "items": {
        "type": "string"
      }
    },

    "_comment_agent_relationships": "=== AGENT RELATIONSHIPS ===",

    "parent_agent_id": {
      "type": "string",
      "format": "uuid",
      "description": "Parent agent UUID (if specialized version)"
    },
    "compatible_agents": {
      "type": "array",
      "description": "Compatible agent IDs",
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "incompatible_agents": {
      "type": "array",
      "description": "Incompatible agent IDs",
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "prerequisite_agents": {
      "type": "array",
      "description": "Prerequisite agent IDs",
      "items": {
        "type": "string",
        "format": "uuid"
      }
    },
    "workflow_positions": {
      "type": "array",
      "description": "Workflow positions this agent can fill",
      "items": {
        "type": "string"
      }
    },

    "_comment_operational_rules": "=== OPERATIONAL CONFIGURATION ===",

    "escalation_rules": {
      "type": "object",
      "description": "Escalation rules configuration",
      "properties": {
        "triggers": {
          "type": "array",
          "items": { "type": "string" }
        },
        "escalate_to": {
          "type": "string"
        }
      }
    },
    "confidence_thresholds": {
      "type": "object",
      "description": "Confidence level thresholds",
      "properties": {
        "low": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.7
        },
        "medium": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.85
        },
        "high": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.95
        }
      }
    },
    "input_validation_rules": {
      "type": "object",
      "description": "Input validation rules",
      "additionalProperties": true
    },
    "output_format_rules": {
      "type": "object",
      "description": "Output formatting rules",
      "additionalProperties": true
    },
    "citation_requirements": {
      "type": "object",
      "description": "Citation requirements",
      "properties": {
        "required": {
          "type": "boolean",
          "default": false
        },
        "format": {
          "type": "string",
          "examples": ["APA", "MLA", "Chicago"]
        }
      }
    },
    "rate_limits": {
      "type": "object",
      "description": "Rate limiting configuration",
      "properties": {
        "per_minute": {
          "type": "integer",
          "default": 60
        },
        "per_hour": {
          "type": "integer",
          "default": 1000
        },
        "per_day": {
          "type": "integer"
        }
      }
    },

    "_comment_testing": "=== TESTING ===",

    "test_scenarios": {
      "type": "array",
      "description": "Test scenarios for validation",
      "items": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "input": { "type": "string" },
          "expected_output": { "type": "string" },
          "validation_criteria": { "type": "array", "items": { "type": "string" } }
        }
      }
    },

    "_comment_metadata": "=== COMPREHENSIVE METADATA ===",

    "metadata": {
      "type": "object",
      "description": "Complete agent metadata and configuration",
      "properties": {
        "architecture_pattern": {
          "type": "string",
          "enum": ["REACTIVE", "DELIBERATIVE", "HYBRID", "MULTI_AGENT"],
          "description": "Agent architecture pattern",
          "default": "REACTIVE"
        },
        "reasoning_method": {
          "type": "string",
          "enum": ["DIRECT", "COT", "REACT"],
          "description": "Primary reasoning approach",
          "default": "DIRECT"
        },
        "communication_tone": {
          "type": "string",
          "description": "Communication tone",
          "examples": ["Friendly and Professional", "Clinical and Precise"]
        },
        "communication_style": {
          "type": "string",
          "description": "Communication style",
          "examples": ["Clear and accessible", "Detailed and structured"]
        },
        "primary_mission": {
          "type": "string",
          "description": "Core mission statement"
        },
        "value_proposition": {
          "type": "string",
          "description": "Key value delivered to users"
        },
        "safety_compliance": {
          "type": "object",
          "description": "Safety and compliance framework",
          "properties": {
            "prohibitions": {
              "type": "array",
              "items": { "type": "string" }
            },
            "mandatory_protections": {
              "type": "array",
              "items": { "type": "string" }
            },
            "regulatory_standards": {
              "type": "array",
              "items": { "type": "string" }
            },
            "confidence_thresholds": {
              "type": "object",
              "properties": {
                "minimum_confidence": { "type": "integer", "default": 75 },
                "escalation_threshold": { "type": "integer", "default": 70 },
                "defer_to_human": { "type": "integer", "default": 60 }
              }
            }
          }
        },
        "performance_targets": {
          "type": "object",
          "properties": {
            "accuracy_target": { "type": "integer", "default": 85 },
            "response_time_target": { "type": "number", "default": 2 },
            "user_satisfaction_target": { "type": "number", "default": 4.0 },
            "escalation_rate_target": { "type": "integer", "default": 15 }
          }
        },
        "model_justification": {
          "type": "string",
          "description": "Justification for model selection"
        },
        "model_citation": {
          "type": "string",
          "description": "Citation/reference for model selection"
        },
        "evidence_based": {
          "type": "boolean",
          "default": true
        }
      }
    },

    "_comment_architecture_duplicates": "=== ARCHITECTURE (Top-level duplicates of metadata) ===",

    "architecture_pattern": {
      "type": "string",
      "enum": ["REACTIVE", "DELIBERATIVE", "HYBRID", "MULTI_AGENT"],
      "description": "Agent architecture pattern (duplicate of metadata.architecture_pattern)"
    },
    "reasoning_method": {
      "type": "string",
      "enum": ["DIRECT", "COT", "REACT"],
      "description": "Primary reasoning method (duplicate of metadata.reasoning_method)"
    },
    "communication_tone": {
      "type": "string",
      "description": "Communication tone (duplicate of metadata.communication_tone)"
    },
    "communication_style": {
      "type": "string",
      "description": "Communication style (duplicate of metadata.communication_style)"
    },
    "complexity_level": {
      "type": "string",
      "enum": ["foundational", "specialist", "expert"],
      "description": "Agent complexity level"
    },
    "primary_mission": {
      "type": "string",
      "description": "Primary mission (duplicate of metadata.primary_mission)"
    },
    "value_proposition": {
      "type": "string",
      "description": "Value proposition (duplicate of metadata.value_proposition)"
    },

    "_comment_prompt_starters": "=== PROMPT STARTERS ===",

    "prompt_starters": {
      "type": "array",
      "description": "Example prompts to help users get started",
      "items": {
        "type": "object",
        "required": ["text"],
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "text": {
            "type": "string",
            "description": "Prompt text"
          },
          "icon": {
            "type": "string",
            "description": "Emoji or icon"
          }
        }
      },
      "minItems": 4,
      "maxItems": 6
    },

    "_comment_access_control": "=== ACCESS & VISIBILITY ===",

    "is_public": {
      "type": "boolean",
      "description": "Whether agent is publicly accessible",
      "default": true
    },

    "_comment_audit_timestamps": "=== AUDIT & TIMESTAMPS (Auto-generated) ===",

    "created_at": {
      "type": "string",
      "format": "date-time",
      "description": "Creation timestamp (auto-generated)"
    },
    "updated_at": {
      "type": "string",
      "format": "date-time",
      "description": "Last update timestamp (auto-generated)"
    },
    "created_by": {
      "type": "string",
      "format": "uuid",
      "description": "Creator user ID"
    },
    "updated_by": {
      "type": "string",
      "format": "uuid",
      "description": "Last updater user ID"
    }
  },

  "definitions": {
    "tier_defaults": {
      "tier_1": {
        "description": "Foundational agents - high volume, general purpose",
        "architecture_pattern": "REACTIVE",
        "reasoning_method": "DIRECT",
        "performance_targets": {
          "accuracy_target": 85,
          "response_time_target": 2,
          "user_satisfaction_target": 4.0,
          "escalation_rate_target": 15
        },
        "rate_limits": {
          "per_minute": 50,
          "per_hour": 500
        }
      },
      "tier_2": {
        "description": "Specialist agents - moderate volume, domain-specific",
        "architecture_pattern": "HYBRID",
        "reasoning_method": "COT",
        "performance_targets": {
          "accuracy_target": 90,
          "response_time_target": 5,
          "user_satisfaction_target": 4.2,
          "escalation_rate_target": 10
        },
        "rate_limits": {
          "per_minute": 30,
          "per_hour": 200
        }
      },
      "tier_3": {
        "description": "Expert agents - low volume, safety-critical",
        "architecture_pattern": "DELIBERATIVE",
        "reasoning_method": "REACT",
        "performance_targets": {
          "accuracy_target": 99,
          "response_time_target": 10,
          "user_satisfaction_target": 4.5,
          "escalation_rate_target": 5
        },
        "rate_limits": {
          "per_minute": 10,
          "per_hour": 100
        }
      }
    }
  },

  "notes": [
    "This schema includes ALL database fields for complete import/export",
    "Fields marked 'auto-generated' should typically not be in import files",
    "Top-level architecture fields (architecture_pattern, reasoning_method, etc.) duplicate metadata fields for query performance",
    "Domain-specific fields (medical, legal, commercial, reimbursement) are optional",
    "Organizational fields (business_function_id, department_id, etc.) should reference existing entities",
    "Use tier_defaults as a guide for tier-appropriate configuration values"
  ]
}
