version: "2.1"
platform: "VITAL Path Healthcare AI Platform"
audit_date: "2025-09-24"
update_date: "2025-09-24"
status: "Production Ready - Build Successful"

frontend:
  framework: "Next.js 14.2.33 + TypeScript"
  base_url: "http://localhost:3000"
  build_status: "successful"
  security_status: "all_vulnerabilities_resolved"
  routes:
    authentication:
      - path: "/"
        purpose: "Landing page and marketing"
        component: "page.tsx"
      - path: "/login"
        purpose: "User authentication"
        component: "(auth)/login/page.tsx"
        protected: false
      - path: "/register"
        purpose: "User registration"
        component: "(auth)/register/page.tsx"
        protected: false
      - path: "/forgot-password"
        purpose: "Password recovery"
        component: "(auth)/forgot-password/page.tsx"
        protected: false

    application:
      - path: "/dashboard"
        purpose: "Main dashboard and overview"
        component: "(app)/dashboard/page.tsx"
        protected: true
        role_required: ["member", "clinician", "researcher", "admin"]
      - path: "/agents"
        purpose: "Agent management and creation"
        component: "(app)/agents/page.tsx"
        protected: true
        role_required: ["clinician", "researcher", "admin"]
      - path: "/agents/create"
        purpose: "Create new healthcare agents"
        component: "(app)/agents/create/page.tsx"
        protected: true
        role_required: ["clinician", "admin"]
      - path: "/chat"
        purpose: "AI chat interface with medical agents"
        component: "(app)/chat/page.tsx"
        protected: true
        features: ["medical_query", "agent_orchestration", "clinical_validation"]
      - path: "/clinical"
        purpose: "Clinical workflows and tools"
        component: "(app)/clinical/page.tsx"
        protected: true
        compliance: ["HIPAA", "FDA"]
      - path: "/clinical/enhanced"
        purpose: "Advanced clinical workflow builder"
        component: "(app)/clinical/enhanced/page.tsx"
        protected: true
        features: ["workflow_builder", "clinical_validation", "safety_monitoring"]
      - path: "/knowledge"
        purpose: "Knowledge base management"
        component: "(app)/knowledge/page.tsx"
        protected: true
        features: ["document_upload", "vector_search", "citation_tracking"]
      - path: "/knowledge/upload"
        purpose: "Document and knowledge upload"
        component: "(app)/knowledge/upload/page.tsx"
        protected: true
      - path: "/knowledge/analytics"
        purpose: "Knowledge base analytics and insights"
        component: "(app)/knowledge/analytics/page.tsx"
        protected: true
      - path: "/prompts"
        purpose: "Prompt library and management"
        component: "(app)/prompts/page.tsx"
        protected: true
        features: ["version_control", "ab_testing", "clinical_optimization"]
      - path: "/testing"
        purpose: "Clinical testing and validation platform"
        component: "(app)/testing/page.tsx"
        protected: true
        compliance: ["FDA_21_CFR_Part_11", "GCP"]
      - path: "/solution-builder"
        purpose: "Facilitated solution design platform following VITAL framework"
        component: "(app)/solution-builder/page.tsx"
        protected: true
        features: ["vital_framework", "ai_facilitated_design", "human_in_loop", "dtx_development", "clinical_trial_design", "compliance_testing"]
      - path: "/dtx/narcolepsy"
        purpose: "Narcolepsy Digital Therapeutic use case implementation"
        component: "(app)/dtx/narcolepsy/page.tsx"
        protected: true
        features: ["patient_management", "ess_scoring", "medication_adherence", "clinical_agents", "pharma_verify_validation"]

    admin:
      - path: "/admin/batch-upload"
        purpose: "Batch upload healthcare agents and data"
        component: "(app)/admin/batch-upload/page.tsx"
        protected: true
        role_required: ["admin"]

    legacy_dashboard:
      - path: "/dashboard/llm-management"
        purpose: "LLM provider management"
        component: "dashboard/llm-management/page.tsx"
        protected: true
      - path: "/dashboard/meditron-setup"
        purpose: "Medical AI model configuration"
        component: "dashboard/meditron-setup/page.tsx"
        protected: true
      - path: "/dashboard/prompts"
        purpose: "Legacy prompt management"
        component: "dashboard/prompts/page.tsx"
        protected: true
      - path: "/dashboard/capabilities"
        purpose: "Platform capabilities overview"
        component: "dashboard/capabilities/page.tsx"
        protected: true

api:
  node_js:
    base_url: "/api"
    framework: "Next.js API Routes"
    endpoints:
      authentication:
        - method: GET
          path: "/api/system/health"
          purpose: "System health check"
          authentication: false
        - method: GET
          path: "/api/health"
          purpose: "Application health status"
          authentication: false

      chat_and_orchestration:
        - method: POST
          path: "/api/chat"
          purpose: "Main chat interface with AI agents"
          authentication: true
          features: ["medical_query", "agent_selection", "clinical_validation"]
        - method: POST
          path: "/api/orchestrator"
          purpose: "Master orchestrator for agent routing"
          authentication: true
          features: ["triage_classification", "agent_routing", "workflow_management"]
        - method: GET
          path: "/api/advisory"
          purpose: "Virtual advisory board management"
          authentication: true
        - method: GET
          path: "/api/metrics"
          purpose: "Platform usage and performance metrics"
          authentication: true

      agents:
        - method: GET
          path: "/api/agents"
          purpose: "List and search healthcare agents"
          authentication: true
        - method: POST
          path: "/api/agents"
          purpose: "Create new healthcare agents"
          authentication: true
          validation: ["clinical_validation", "safety_requirements"]
        - method: GET
          path: "/api/agents/[id]"
          purpose: "Get specific agent details"
          authentication: true
        - method: PUT
          path: "/api/agents/[id]"
          purpose: "Update agent configuration"
          authentication: true
        - method: POST
          path: "/api/agents/query-hybrid"
          purpose: "Hybrid agent querying with clinical validation"
          authentication: true
          features: ["pharma_framework", "verify_protocol"]
        - method: GET
          path: "/api/agents/registry"
          purpose: "Agent registry and discovery"
          authentication: true

      knowledge_and_rag:
        - method: GET
          path: "/api/knowledge/documents"
          purpose: "List knowledge base documents"
          authentication: true
        - method: POST
          path: "/api/knowledge/upload"
          purpose: "Upload medical documents and literature"
          authentication: true
          features: ["vector_embedding", "medical_entity_extraction"]
        - method: GET
          path: "/api/knowledge/analytics"
          purpose: "Knowledge base usage analytics"
          authentication: true
        - method: POST
          path: "/api/knowledge/search"
          purpose: "Vector-based knowledge search"
          authentication: true
        - method: GET
          path: "/api/knowledge/duplicates"
          purpose: "Detect duplicate documents"
          authentication: true
        - method: POST
          path: "/api/knowledge/process"
          purpose: "Process and index documents"
          authentication: true
        - method: POST
          path: "/api/rag/search-hybrid"
          purpose: "Hybrid RAG search with clinical context"
          authentication: true
        - method: POST
          path: "/api/rag/enhanced"
          purpose: "Enhanced RAG with medical validation"
          authentication: true
        - method: POST
          path: "/api/rag/medical"
          purpose: "Medical-specific RAG queries"
          authentication: true
          compliance: ["HIPAA", "clinical_guidelines"]

      clinical_and_safety:
        - method: POST
          path: "/api/clinical/validation"
          purpose: "Clinical validation services"
          authentication: true
          features: ["pharma_framework", "verify_protocol", "evidence_validation"]
        - method: POST
          path: "/api/clinical/safety"
          purpose: "Clinical safety monitoring"
          authentication: true
          features: ["contraindication_checking", "drug_interaction_alerts"]

      prompts_and_optimization:
        - method: GET
          path: "/api/prompts"
          purpose: "List prompt library entries"
          authentication: true
        - method: POST
          path: "/api/prompts"
          purpose: "Create new prompts with versioning"
          authentication: true
        - method: GET
          path: "/api/prompts/[id]"
          purpose: "Get specific prompt details"
          authentication: true
        - method: PUT
          path: "/api/prompts/[id]"
          purpose: "Update prompt with version control"
          authentication: true
        - method: POST
          path: "/api/prompts/generate"
          purpose: "Generate optimized prompts"
          authentication: true
        - method: POST
          path: "/api/prompts/generate-hybrid"
          purpose: "Hybrid prompt generation with clinical optimization"
          authentication: true
        - method: POST
          path: "/api/prompts/advanced"
          purpose: "Advanced prompt processing and optimization"
          authentication: true

      llm_management:
        - method: GET
          path: "/api/llm/providers"
          purpose: "List LLM providers and models"
          authentication: true
        - method: POST
          path: "/api/llm/providers"
          purpose: "Configure LLM providers"
          authentication: true
        - method: GET
          path: "/api/llm/providers/[id]"
          purpose: "Get LLM provider details"
          authentication: true
        - method: POST
          path: "/api/llm/query"
          purpose: "Direct LLM querying with safety checks"
          authentication: true
        - method: GET
          path: "/api/llm/usage"
          purpose: "LLM usage analytics and billing"
          authentication: true
        - method: GET
          path: "/api/llm/metrics"
          purpose: "LLM performance metrics"
          authentication: true
        - method: POST
          path: "/api/llm/feedback"
          purpose: "LLM response feedback collection"
          authentication: true
        - method: GET
          path: "/api/llm/providers/openai/usage"
          purpose: "OpenAI-specific usage metrics"
          authentication: true

      platform_management:
        - method: GET
          path: "/api/capabilities"
          purpose: "List platform capabilities"
          authentication: true
        - method: GET
          path: "/api/capabilities/[id]"
          purpose: "Get capability details"
          authentication: true
        - method: GET
          path: "/api/competencies"
          purpose: "Healthcare competency framework"
          authentication: true
        - method: GET
          path: "/api/validations"
          purpose: "Validation framework status"
          authentication: true
        - method: GET
          path: "/api/business-functions"
          purpose: "Healthcare business function mapping"
          authentication: true
        - method: GET
          path: "/api/roles"
          purpose: "User role management"
          authentication: true
        - method: GET
          path: "/api/compliance"
          purpose: "Regulatory compliance status"
          authentication: true
        - method: GET
          path: "/api/workflows"
          purpose: "Clinical workflow templates"
          authentication: true

      admin_operations:
        - method: POST
          path: "/api/admin/migrate-clinical-agents"
          purpose: "Migrate clinical agents to new schema"
          authentication: true
          role_required: ["admin"]
        - method: POST
          path: "/api/admin/add-clinical-agents"
          purpose: "Add clinical intelligence agents"
          authentication: true
          role_required: ["admin"]
        - method: POST
          path: "/api/admin/add-regulatory-agents"
          purpose: "Add regulatory compliance agents"
          authentication: true
          role_required: ["admin"]
        - method: POST
          path: "/api/admin/add-market-access-agents"
          purpose: "Add market access strategy agents"
          authentication: true
          role_required: ["admin"]
        - method: GET
          path: "/api/admin/check-schema"
          purpose: "Database schema validation"
          authentication: true
          role_required: ["admin"]

      batch_operations:
        - method: POST
          path: "/api/batch/capabilities"
          purpose: "Batch capability management"
          authentication: true
          role_required: ["admin"]
        - method: POST
          path: "/api/batch/prompts"
          purpose: "Batch prompt operations"
          authentication: true
          role_required: ["admin"]
        - method: POST
          path: "/api/batch/agents"
          purpose: "Batch agent operations"
          authentication: true
          role_required: ["admin"]

      analytics_and_monitoring:
        - method: GET
          path: "/api/analytics/dashboard"
          purpose: "Analytics dashboard data"
          authentication: true
        - method: POST
          path: "/api/events/stream"
          purpose: "Real-time event streaming"
          authentication: true
        - method: GET
          path: "/api/events/websocket"
          purpose: "WebSocket event connections"
          authentication: true
        - method: GET
          path: "/api/interventions"
          purpose: "Clinical intervention tracking"
          authentication: true
        - method: POST
          path: "/api/interventions"
          purpose: "Create clinical interventions"
          authentication: true
        - method: GET
          path: "/api/interventions/[id]"
          purpose: "Get intervention details"
          authentication: true

      utilities:
        - method: GET
          path: "/api/icons"
          purpose: "Icon library for UI components"
          authentication: true
        - method: GET
          path: "/api/icons/[id]"
          purpose: "Get specific icon"
          authentication: true

  python_services:
    base_url: "/pyapi"
    framework: "FastAPI + Python"
    services:
      - name: "clinical_ai_optimizer"
        port: 8001
        purpose: "Phase 5 Clinical AI optimization with PHARMA/VERIFY frameworks"
        endpoints:
          - "/optimize/medical-model"
          - "/validate/clinical-accuracy"
          - "/frameworks/pharma"
          - "/frameworks/verify"
        features: ["model_optimization", "clinical_validation", "safety_enhancement"]

      - name: "global_healthcare_scaling"
        port: 8002
        purpose: "Multi-jurisdiction healthcare deployment"
        endpoints:
          - "/deploy/region"
          - "/compliance/jurisdiction"
          - "/scaling/global"
        features: ["multi_region", "regulatory_compliance", "data_sovereignty"]

      - name: "healthcare_integrations"
        port: 8003
        purpose: "EHR and healthcare ecosystem integration"
        endpoints:
          - "/integrations/ehr"
          - "/integrations/laboratory"
          - "/integrations/medical-devices"
          - "/standards/hl7"
          - "/standards/fhir"
        features: ["ehr_integration", "hl7_fhir", "medical_devices"]

      - name: "clinical_intelligence"
        port: 8004
        purpose: "Advanced clinical analytics and predictive intelligence"
        endpoints:
          - "/analytics/clinical"
          - "/predictions/patient-outcomes"
          - "/analytics/population-health"
          - "/monitoring/real-time"
        features: ["predictive_analytics", "population_health", "real_time_monitoring"]

      - name: "medical_knowledge_evolution"
        port: 8005
        purpose: "Continuous medical learning and knowledge evolution"
        endpoints:
          - "/knowledge/continuous-update"
          - "/evidence/synthesis"
          - "/guidelines/tracking"
          - "/experts/validation"
        features: ["continuous_learning", "evidence_synthesis", "expert_validation"]

background:
  queues:
    - name: "medical_processing_queue"
      technology: "Redis + Celery"
      purpose: "Medical document processing and analysis"
      dlq: true
      monitoring: true
    - name: "clinical_validation_queue"
      technology: "Redis + Celery"
      purpose: "Clinical validation and safety checks"
      dlq: true
      priority: "high"
    - name: "agent_orchestration_queue"
      technology: "Redis + Celery"
      purpose: "Agent workflow orchestration"
      dlq: true
      monitoring: true
    - name: "knowledge_indexing_queue"
      technology: "Redis + Celery"
      purpose: "Vector embedding and knowledge indexing"
      dlq: true

  schedulers:
    - name: "medical_knowledge_sync"
      engine: "Celery Beat"
      schedule: "daily"
      purpose: "Sync latest medical literature and guidelines"
    - name: "compliance_audit"
      engine: "Celery Beat"
      schedule: "weekly"
      purpose: "Automated compliance and audit checks"
    - name: "model_performance_evaluation"
      engine: "Celery Beat"
      schedule: "hourly"
      purpose: "Continuous model performance monitoring"

stores:
  relational:
    - name: "primary_postgresql"
      engine: "PostgreSQL 15+"
      purpose: "Primary application data with RLS"
      schemas:
        - "public" # Core application schema
        - "medical" # Medical domain data
        - "regulatory" # Regulatory compliance data
        - "agents" # Agent configurations
        - "knowledge" # Knowledge base metadata
        - "audit" # Audit and compliance logs
      features:
        - row_level_security: true
        - audit_logging: true
        - encryption_at_rest: true
        - backup_strategy: "point_in_time_recovery"

  vector:
    - name: "pgvector_embeddings"
      engine: "pgvector extension"
      dimensions: 3072
      purpose: "Medical document and knowledge embeddings"
      indexes:
        - "hnsw_cosine"
        - "ivfflat_l2"
      features:
        - similarity_search: true
        - semantic_clustering: true
        - medical_entity_embeddings: true

  cache:
    - name: "primary_redis"
      engine: "Redis 7+"
      usage:
        - "user_sessions"
        - "rate_limiting"
        - "job_queues"
        - "real_time_chat"
        - "clinical_alerts"
      features:
        - persistence: "AOF + RDB"
        - clustering: true
        - ssl_encryption: true

  object_storage:
    - name: "medical_documents"
      purpose: "Medical literature, clinical documents, images"
      features:
        - encryption: "AES-256"
        - compliance: ["HIPAA", "SOC2"]
        - versioning: true
        - lifecycle_policies: true

security:
  authentication:
    provider: "Supabase Auth"
    methods: ["email_password", "oauth_google", "oauth_microsoft"]
    features:
      - multi_factor_authentication: true
      - session_management: true
      - role_based_access_control: true

  authorization:
    model: "RBAC + ABAC"
    roles: ["admin", "clinician", "researcher", "member"]
    features:
      - row_level_security: true
      - api_endpoint_protection: true
      - resource_level_permissions: true

  compliance:
    frameworks: ["HIPAA", "FDA_21_CFR_Part_11", "GDPR", "SOC2"]
    features:
      - audit_logging: "comprehensive"
      - data_encryption: "end_to_end"
      - access_controls: "multi_layered"
      - privacy_controls: "data_minimization"

monitoring:
  observability:
    tracing: "OpenTelemetry"
    metrics: "Prometheus + Grafana"
    logging: "Structured JSON logs"
    alerting: "PagerDuty integration"

  health_checks:
    - endpoint: "/api/health"
      checks: ["database", "redis", "external_apis"]
    - endpoint: "/api/system/health"
      checks: ["system_resources", "service_dependencies"]

deployment:
  environments: ["development", "staging", "production"]
  strategy: "Blue-Green with canary releases"
  infrastructure: "Kubernetes + Terraform"
  regions: ["us-east-1", "eu-west-1", "ap-southeast-1"]

integrations:
  healthcare_systems:
    - "Epic MyChart"
    - "Cerner PowerChart"
    - "Allscripts"
    - "athenahealth"

  medical_databases:
    - "PubMed/MEDLINE"
    - "ClinicalTrials.gov"
    - "FDA Orange Book"
    - "WHO Global Health Observatory"

  standards_compliance:
    - "HL7 FHIR R4"
    - "ICD-10"
    - "SNOMED CT"
    - "LOINC"
    - "RxNorm"